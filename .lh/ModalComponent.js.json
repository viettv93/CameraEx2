{
    "sourceFile": "ModalComponent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1645350836501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645351976498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,40 @@\n-import React from \"react\"\r\n-import { View } from \"react-native\"\r\n+import React, { forwardRef, useImperativeHandle, useRef } from \"react\"\r\n+import { Modal, View } from \"react-native\"\r\n+import { Icon } from \"react-native-vector-icons/Feather\"\r\n \r\n-const ModalComponent =()=>{\r\n-    return(\r\n+const ModalComponent = forwardRef((props, ref)=> {\r\n+    const camera=useRef(null)\r\n+    \r\n+    useImperativeHandle(ref, () => {\r\n+     \r\n+    })\r\n+    return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n+            <RNCamera ref={camera}\r\n+            style={styles.preview}\r\n+            type={RNCamera.Constants.Type.back}\r\n+            flashMode={RNCamera.Constants.FlashMode.on}\r\n+            androidCameraPermissionOptions={{\r\n+              title: 'Permission to use camera',\r\n+              message: 'We need your permission to use your camera',\r\n+              buttonPositive: 'Ok',\r\n+              buttonNegative: 'Cancel',\r\n+            }}\r\n+            androidRecordAudioPermissionOptions={{\r\n+              title: 'Permission to use audio recording',\r\n+              message: 'We need your permission to use your audio',\r\n+              buttonPositive: 'Ok',\r\n+              buttonNegative: 'Cancel',\r\n+            }}/>\r\n+           <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+          <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n+            <Icon name=\"camera\" size ={50} />\r\n+          </TouchableOpacity>\r\n+        </View>\r\n \r\n+\r\n+\r\n         </View>\r\n     )\r\n-}\r\n+})\r\n export default ModalComponent\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645353558412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,79 @@\n-import React, { forwardRef, useImperativeHandle, useRef } from \"react\"\r\n-import { Modal, View } from \"react-native\"\r\n-import { Icon } from \"react-native-vector-icons/Feather\"\r\n+import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\"\r\n+import { View, StyleSheet } from \"react-native\"\r\n+import { Icon } from \"react-native-vector-icons/MaterialIcons\"\r\n+import { RNCamera } from 'react-native-camera'\r\n \r\n-const ModalComponent = forwardRef((props, ref)=> {\r\n-    const camera=useRef(null)\r\n-    \r\n+\r\n+const ModalComponent = forwardRef((props, ref) => {\r\n+    const camera = useRef(null)\r\n+    const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n+    const changeDirection = () => {\r\n+        if (cameraDirection == RNCamera.Constants.Type.back)\r\n+            setCameraDirection(RNCamera.Constants.Type.front)\r\n+        else setCameraDirection(RNCamera.Constants.Type.back)\r\n+    }\r\n     useImperativeHandle(ref, () => {\r\n-     \r\n+        takePicture ,\r\n+        changeDirection\r\n+\r\n     })\r\n+\r\n+    const takePicture = async () => {\r\n+        if (camera) {\r\n+            const options = { quality: 0.5, base64: true };\r\n+            const data = await camera.takePictureAsync(options);\r\n+            console.log(data.uri)\r\n+\r\n+        }\r\n+    }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n             <RNCamera ref={camera}\r\n-            style={styles.preview}\r\n-            type={RNCamera.Constants.Type.back}\r\n-            flashMode={RNCamera.Constants.FlashMode.on}\r\n-            androidCameraPermissionOptions={{\r\n-              title: 'Permission to use camera',\r\n-              message: 'We need your permission to use your camera',\r\n-              buttonPositive: 'Ok',\r\n-              buttonNegative: 'Cancel',\r\n-            }}\r\n-            androidRecordAudioPermissionOptions={{\r\n-              title: 'Permission to use audio recording',\r\n-              message: 'We need your permission to use your audio',\r\n-              buttonPositive: 'Ok',\r\n-              buttonNegative: 'Cancel',\r\n-            }}/>\r\n-           <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n-          <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-            <Icon name=\"camera\" size ={50} />\r\n-          </TouchableOpacity>\r\n+                style={styles.preview}\r\n+                type={cameraDirection}\r\n+                flashMode={RNCamera.Constants.FlashMode.off}\r\n+                androidCameraPermissionOptions={{\r\n+                    title: 'Permission to use camera',\r\n+                    message: 'We need your permission to use your camera',\r\n+                    buttonPositive: 'Ok',\r\n+                    buttonNegative: 'Cancel',\r\n+                }}\r\n+                androidRecordAudioPermissionOptions={{\r\n+                    title: 'Permission to use audio recording',\r\n+                    message: 'We need your permission to use your audio',\r\n+                    buttonPositive: 'Ok',\r\n+                    buttonNegative: 'Cancel',\r\n+                }} />\r\n+            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+                <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n+                    <Icon name=\"circle\" size={50} />\r\n+                </TouchableOpacity>\r\n+            </View>\r\n+            <View style={{position:\"absolute\" ,alignItems: 'center', top:20}}>\r\n+                <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n+            </View>\r\n         </View>\r\n-\r\n-\r\n-\r\n-        </View>\r\n     )\r\n })\r\n+const styles = StyleSheet.create({\r\n+    container: {\r\n+        flex: 1,\r\n+        flexDirection: 'column',\r\n+        backgroundColor: 'black',\r\n+    },\r\n+    preview: {\r\n+        flex: 1,\r\n+        justifyContent: 'flex-end',\r\n+        alignItems: 'center',\r\n+    },\r\n+    capture: {\r\n+        flex: 0,\r\n+        backgroundColor: '#fff',\r\n+        borderRadius: 5,\r\n+        padding: 15,\r\n+        paddingHorizontal: 20,\r\n+        alignSelf: 'center',\r\n+        margin: 20,\r\n+    },\r\n+})\r\n export default ModalComponent\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645353603151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\"\r\n-import { View, StyleSheet } from \"react-native\"\r\n+import { View, StyleSheet, TouchableOpacity } from \"react-native\"\r\n import { Icon } from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n"
                },
                {
                    "date": 1645354701309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => {\r\n-        takePicture ,\r\n+        takePicture,\r\n         changeDirection\r\n \r\n     })\r\n \r\n"
                },
                {
                    "date": 1645355391429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,5 +75,5 @@\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n })\r\n-export default ModalComponent\n\\ No newline at end of file\n+export default forwardRef(ModalComponent)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645355502425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Icon } from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n-const ModalComponent = forwardRef((props, ref) => {\r\n+const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n@@ -74,6 +74,6 @@\n         paddingHorizontal: 20,\r\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n-})\r\n+}\r\n export default forwardRef(ModalComponent)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645355539156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n             </View>\r\n         </View>\r\n     )\r\n-})\r\n+}\r\n const styles = StyleSheet.create({\r\n     container: {\r\n         flex: 1,\r\n         flexDirection: 'column',\r\n@@ -74,6 +74,6 @@\n         paddingHorizontal: 20,\r\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n-}\r\n-export default forwardRef(ModalComponent)\n\\ No newline at end of file\n+})\r\n+ export default forwardRef(ModalComponent)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645361010102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\"\r\n-import { View, StyleSheet, TouchableOpacity } from \"react-native\"\r\n+import { View, StyleSheet, TouchableOpacity, Modal } from \"react-native\"\r\n import { Icon } from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n@@ -26,8 +26,9 @@\n \r\n         }\r\n     }\r\n     return (\r\n+        <Modal>\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n             <RNCamera ref={camera}\r\n                 style={styles.preview}\r\n                 type={cameraDirection}\r\n@@ -52,8 +53,9 @@\n             <View style={{position:\"absolute\" ,alignItems: 'center', top:20}}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n             </View>\r\n         </View>\r\n+        </Modal>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n     container: {\r\n"
                },
                {
                    "date": 1645361056878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => {\r\n         takePicture,\r\n-        changeDirection\r\n+            changeDirection\r\n \r\n     })\r\n \r\n     const takePicture = async () => {\r\n@@ -27,34 +27,34 @@\n         }\r\n     }\r\n     return (\r\n         <Modal>\r\n-        <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <RNCamera ref={camera}\r\n-                style={styles.preview}\r\n-                type={cameraDirection}\r\n-                flashMode={RNCamera.Constants.FlashMode.off}\r\n-                androidCameraPermissionOptions={{\r\n-                    title: 'Permission to use camera',\r\n-                    message: 'We need your permission to use your camera',\r\n-                    buttonPositive: 'Ok',\r\n-                    buttonNegative: 'Cancel',\r\n-                }}\r\n-                androidRecordAudioPermissionOptions={{\r\n-                    title: 'Permission to use audio recording',\r\n-                    message: 'We need your permission to use your audio',\r\n-                    buttonPositive: 'Ok',\r\n-                    buttonNegative: 'Cancel',\r\n-                }} />\r\n-            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n-                <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-                    <Icon name=\"circle\" size={50} />\r\n-                </TouchableOpacity>\r\n+            <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n+                <RNCamera ref={camera}\r\n+                    style={styles.preview}\r\n+                    type={cameraDirection}\r\n+                    flashMode={RNCamera.Constants.FlashMode.off}\r\n+                    androidCameraPermissionOptions={{\r\n+                        title: 'Permission to use camera',\r\n+                        message: 'We need your permission to use your camera',\r\n+                        buttonPositive: 'Ok',\r\n+                        buttonNegative: 'Cancel',\r\n+                    }}\r\n+                    androidRecordAudioPermissionOptions={{\r\n+                        title: 'Permission to use audio recording',\r\n+                        message: 'We need your permission to use your audio',\r\n+                        buttonPositive: 'Ok',\r\n+                        buttonNegative: 'Cancel',\r\n+                    }} />\r\n+                <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+                    <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n+                        <Icon name=\"circle\" size={50} />\r\n+                    </TouchableOpacity>\r\n+                </View>\r\n+                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+                    <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n+                </View>\r\n             </View>\r\n-            <View style={{position:\"absolute\" ,alignItems: 'center', top:20}}>\r\n-                <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View>\r\n-        </View>\r\n         </Modal>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n@@ -77,5 +77,5 @@\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n })\r\n- export default forwardRef(ModalComponent)\n\\ No newline at end of file\n+export default forwardRef(ModalComponent)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645361089561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,25 +7,25 @@\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n-        if (cameraDirection == RNCamera.Constants.Type.back)\r\n-            setCameraDirection(RNCamera.Constants.Type.front)\r\n-        else setCameraDirection(RNCamera.Constants.Type.back)\r\n+        // if (cameraDirection == RNCamera.Constants.Type.back)\r\n+        //     setCameraDirection(RNCamera.Constants.Type.front)\r\n+        // else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => {\r\n         takePicture,\r\n             changeDirection\r\n \r\n     })\r\n \r\n     const takePicture = async () => {\r\n-        if (camera) {\r\n-            const options = { quality: 0.5, base64: true };\r\n-            const data = await camera.takePictureAsync(options);\r\n-            console.log(data.uri)\r\n+        // if (camera) {\r\n+        //     const options = { quality: 0.5, base64: true };\r\n+        //     const data = await camera.takePictureAsync(options);\r\n+        //     console.log(data.uri)\r\n \r\n-        }\r\n+        // }\r\n     }\r\n     return (\r\n         <Modal>\r\n             <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645361099394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n \r\n         // }\r\n     }\r\n     return (\r\n-        <Modal>\r\n             <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                 <RNCamera ref={camera}\r\n                     style={styles.preview}\r\n                     type={cameraDirection}\r\n@@ -53,9 +52,8 @@\n                 <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                     <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n                 </View>\r\n             </View>\r\n-        </Modal>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n     container: {\r\n"
                },
                {
                    "date": 1645361115460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n+    \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n         // if (cameraDirection == RNCamera.Constants.Type.back)\r\n         //     setCameraDirection(RNCamera.Constants.Type.front)\r\n"
                },
                {
                    "date": 1645361139070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,18 @@\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n-    \r\n+\r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n         // if (cameraDirection == RNCamera.Constants.Type.back)\r\n         //     setCameraDirection(RNCamera.Constants.Type.front)\r\n         // else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => {\r\n         takePicture,\r\n-            changeDirection\r\n+        changeDirection\r\n \r\n     })\r\n \r\n     const takePicture = async () => {\r\n"
                },
                {
                    "date": 1645361155880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,13 +12,13 @@\n         // if (cameraDirection == RNCamera.Constants.Type.back)\r\n         //     setCameraDirection(RNCamera.Constants.Type.front)\r\n         // else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n-    useImperativeHandle(ref, () => {\r\n-        takePicture,\r\n-        changeDirection\r\n+    // useImperativeHandle(ref, () => {\r\n+    //     takePicture,\r\n+    //     changeDirection\r\n \r\n-    })\r\n+    // })\r\n \r\n     const takePicture = async () => {\r\n         // if (camera) {\r\n         //     const options = { quality: 0.5, base64: true };\r\n@@ -76,5 +76,5 @@\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n })\r\n-export default forwardRef(ModalComponent)\n\\ No newline at end of file\n+export default ModalComponent\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645361190438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,34 +27,34 @@\n \r\n         // }\r\n     }\r\n     return (\r\n-            <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-                <RNCamera ref={camera}\r\n-                    style={styles.preview}\r\n-                    type={cameraDirection}\r\n-                    flashMode={RNCamera.Constants.FlashMode.off}\r\n-                    androidCameraPermissionOptions={{\r\n-                        title: 'Permission to use camera',\r\n-                        message: 'We need your permission to use your camera',\r\n-                        buttonPositive: 'Ok',\r\n-                        buttonNegative: 'Cancel',\r\n-                    }}\r\n-                    androidRecordAudioPermissionOptions={{\r\n-                        title: 'Permission to use audio recording',\r\n-                        message: 'We need your permission to use your audio',\r\n-                        buttonPositive: 'Ok',\r\n-                        buttonNegative: 'Cancel',\r\n-                    }} />\r\n-                <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n-                    <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-                        <Icon name=\"circle\" size={50} />\r\n-                    </TouchableOpacity>\r\n-                </View>\r\n-                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n-                    <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-                </View>\r\n+        <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n+            <RNCamera ref={camera}\r\n+                style={styles.preview}\r\n+                type={cameraDirection}\r\n+                flashMode={RNCamera.Constants.FlashMode.off}\r\n+                androidCameraPermissionOptions={{\r\n+                    title: 'Permission to use camera',\r\n+                    message: 'We need your permission to use your camera',\r\n+                    buttonPositive: 'Ok',\r\n+                    buttonNegative: 'Cancel',\r\n+                }}\r\n+                androidRecordAudioPermissionOptions={{\r\n+                    title: 'Permission to use audio recording',\r\n+                    message: 'We need your permission to use your audio',\r\n+                    buttonPositive: 'Ok',\r\n+                    buttonNegative: 'Cancel',\r\n+                }} />\r\n+            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+                <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n+                    <Icon name=\"circle\" size={50} />\r\n+                </TouchableOpacity>\r\n             </View>\r\n+            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+                <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n+            </View>\r\n+        </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n     container: {\r\n"
                },
                {
                    "date": 1645361204437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         // }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <RNCamera ref={camera}\r\n+            {/* <RNCamera ref={camera}\r\n                 style={styles.preview}\r\n                 type={cameraDirection}\r\n                 flashMode={RNCamera.Constants.FlashMode.off}\r\n                 androidCameraPermissionOptions={{\r\n@@ -51,9 +51,9 @@\n                 </TouchableOpacity>\r\n             </View>\r\n             <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View>\r\n+            </View> */}\r\n         </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1645361213955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         // }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            {/* <RNCamera ref={camera}\r\n+            <RNCamera ref={camera}\r\n                 style={styles.preview}\r\n                 type={cameraDirection}\r\n                 flashMode={RNCamera.Constants.FlashMode.off}\r\n                 androidCameraPermissionOptions={{\r\n@@ -44,9 +44,9 @@\n                     message: 'We need your permission to use your audio',\r\n                     buttonPositive: 'Ok',\r\n                     buttonNegative: 'Cancel',\r\n                 }} />\r\n-            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+            {/* <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n             </View>\r\n"
                },
                {
                    "date": 1645361223690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,14 +44,14 @@\n                     message: 'We need your permission to use your audio',\r\n                     buttonPositive: 'Ok',\r\n                     buttonNegative: 'Cancel',\r\n                 }} />\r\n-            {/* <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n             </View>\r\n-            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+            {/* <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n             </View> */}\r\n         </View>\r\n     )\r\n"
                },
                {
                    "date": 1645361229133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,11 @@\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n             </View>\r\n-            {/* <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View> */}\r\n+            </View>\r\n         </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1645361242962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,11 @@\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n             </View>\r\n-            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+            {/* <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View>\r\n+            </View> */}\r\n         </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1645361249299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,13 +44,13 @@\n                     message: 'We need your permission to use your audio',\r\n                     buttonPositive: 'Ok',\r\n                     buttonNegative: 'Cancel',\r\n                 }} />\r\n-            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+            {/* <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n-            </View>\r\n+            </View> */}\r\n             {/* <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n             </View> */}\r\n         </View>\r\n"
                },
                {
                    "date": 1645361256121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,11 @@\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n             </View> */}\r\n-            {/* <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View> */}\r\n+            </View>\r\n         </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1645361304173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\"\r\n import { View, StyleSheet, TouchableOpacity, Modal } from \"react-native\"\r\n-import { Icon } from \"react-native-vector-icons/MaterialIcons\"\r\n+import Icon  from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n@@ -44,13 +44,13 @@\n                     message: 'We need your permission to use your audio',\r\n                     buttonPositive: 'Ok',\r\n                     buttonNegative: 'Cancel',\r\n                 }} />\r\n-            {/* <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                 <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                     <Icon name=\"circle\" size={50} />\r\n                 </TouchableOpacity>\r\n-            </View> */}\r\n+            </View>\r\n             <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n                 <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n             </View>\r\n         </View>\r\n"
                },
                {
                    "date": 1645361337443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,25 +8,24 @@\n     const camera = useRef(null)\r\n \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n-        // if (cameraDirection == RNCamera.Constants.Type.back)\r\n-        //     setCameraDirection(RNCamera.Constants.Type.front)\r\n-        // else setCameraDirection(RNCamera.Constants.Type.back)\r\n+        if (cameraDirection == RNCamera.Constants.Type.back)\r\n+            setCameraDirection(RNCamera.Constants.Type.front)\r\n+        else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n-    // useImperativeHandle(ref, () => {\r\n-    //     takePicture,\r\n-    //     changeDirection\r\n+    useImperativeHandle(ref, () => {\r\n+        takePicture,\r\n+        changeDirection\r\n \r\n-    // })\r\n+    })\r\n \r\n     const takePicture = async () => {\r\n-        // if (camera) {\r\n-        //     const options = { quality: 0.5, base64: true };\r\n-        //     const data = await camera.takePictureAsync(options);\r\n-        //     console.log(data.uri)\r\n-\r\n-        // }\r\n+        if (camera) {\r\n+            const options = { quality: 0.5, base64: true };\r\n+            const data = await camera.takePictureAsync(options);\r\n+            console.log(data.uri)\r\n+        }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n             <RNCamera ref={camera}\r\n@@ -76,5 +75,5 @@\n         alignSelf: 'center',\r\n         margin: 20,\r\n     },\r\n })\r\n-export default ModalComponent\n\\ No newline at end of file\n+export default forwardRef(ModalComponent)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645365311439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,25 @@\n import React, { forwardRef, useImperativeHandle, useRef, useState } from \"react\"\r\n import { View, StyleSheet, TouchableOpacity, Modal } from \"react-native\"\r\n-import Icon  from \"react-native-vector-icons/MaterialIcons\"\r\n+import Icon from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n-const ModalComponent = (props, ref) => {\r\n+const ModalComponent = ({props, ref}) => {\r\n     const camera = useRef(null)\r\n-\r\n+    \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => {\r\n-        takePicture,\r\n-        changeDirection\r\n-\r\n+            takePicture,\r\n+            changeDirection\r\n+     \r\n     })\r\n-\r\n+    \r\n     const takePicture = async () => {\r\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.takePictureAsync(options);\r\n@@ -27,32 +27,36 @@\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <RNCamera ref={camera}\r\n-                style={styles.preview}\r\n-                type={cameraDirection}\r\n-                flashMode={RNCamera.Constants.FlashMode.off}\r\n-                androidCameraPermissionOptions={{\r\n-                    title: 'Permission to use camera',\r\n-                    message: 'We need your permission to use your camera',\r\n-                    buttonPositive: 'Ok',\r\n-                    buttonNegative: 'Cancel',\r\n-                }}\r\n-                androidRecordAudioPermissionOptions={{\r\n-                    title: 'Permission to use audio recording',\r\n-                    message: 'We need your permission to use your audio',\r\n-                    buttonPositive: 'Ok',\r\n-                    buttonNegative: 'Cancel',\r\n-                }} />\r\n-            <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n-                <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-                    <Icon name=\"circle\" size={50} />\r\n-                </TouchableOpacity>\r\n-            </View>\r\n-            <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n-                <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n-            </View>\r\n+            <Modal visible={props.visible}>\r\n+                <RNCamera ref={camera}\r\n+                    style={styles.preview}\r\n+                    type={cameraDirection}\r\n+                    flashMode={RNCamera.Constants.FlashMode.off}\r\n+                    androidCameraPermissionOptions={{\r\n+                        title: 'Permission to use camera',\r\n+                        message: 'We need your permission to use your camera',\r\n+                        buttonPositive: 'Ok',\r\n+                        buttonNegative: 'Cancel',\r\n+                    }}\r\n+                    androidRecordAudioPermissionOptions={{\r\n+                        title: 'Permission to use audio recording',\r\n+                        message: 'We need your permission to use your audio',\r\n+                        buttonPositive: 'Ok',\r\n+                        buttonNegative: 'Cancel',\r\n+                    }} />\r\n+                <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n+                    <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n+                        <Icon name=\"circle\" size={50} />\r\n+                    </TouchableOpacity>\r\n+                </View>\r\n+                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+                    <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n+                </View>\r\n+            </Modal>\r\n+\r\n+\r\n         </View>\r\n     )\r\n }\r\n const styles = StyleSheet.create({\r\n"
                },
                {
                    "date": 1645365879051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,22 +3,22 @@\n import Icon from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n-const ModalComponent = ({props, ref}) => {\r\n+const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n     \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n-    useImperativeHandle(ref, () => {\r\n-            takePicture,\r\n-            changeDirection\r\n+    useImperativeHandle(ref, () => ({\r\n+            takePicture:takePicture,\r\n+            changeDirection:changeDirection\r\n      \r\n-    })\r\n+    }))\r\n     \r\n     const takePicture = async () => {\r\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n@@ -27,9 +27,9 @@\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <Modal visible={props.visible}>\r\n+            <Modal >\r\n                 <RNCamera ref={camera}\r\n                     style={styles.preview}\r\n                     type={cameraDirection}\r\n                     flashMode={RNCamera.Constants.FlashMode.off}\r\n"
                },
                {
                    "date": 1645366126959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <Modal >\r\n+            <Modal visible={false}>\r\n                 <RNCamera ref={camera}\r\n                     style={styles.preview}\r\n                     type={cameraDirection}\r\n                     flashMode={RNCamera.Constants.FlashMode.off}\r\n"
                },
                {
                    "date": 1645366931480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,31 +5,33 @@\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n-    \r\n+    const [image, setImage] = useState(null)\r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n+    const [visible, setVisible] = useState(false)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n     useImperativeHandle(ref, () => ({\r\n-            takePicture:takePicture,\r\n-            changeDirection:changeDirection\r\n-     \r\n+        image: image,\r\n+        setVisible: setVisible\r\n+\r\n     }))\r\n-    \r\n+\r\n     const takePicture = async () => {\r\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.takePictureAsync(options);\r\n             console.log(data.uri)\r\n+            setImage(data.uri)\r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n-            <Modal visible={false}>\r\n+            <Modal visible={visible}>\r\n                 <RNCamera ref={camera}\r\n                     style={styles.preview}\r\n                     type={cameraDirection}\r\n                     flashMode={RNCamera.Constants.FlashMode.off}\r\n"
                },
                {
                    "date": 1645367562040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,28 +5,29 @@\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n-    const [image, setImage] = useState(null)\r\n+    \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const [visible, setVisible] = useState(false)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n+    const onVisible=()=>{\r\n+       setVisible(true)\r\n+    }\r\n     useImperativeHandle(ref, () => ({\r\n-        image: image,\r\n-        setVisible: setVisible\r\n-\r\n+        onVisible: onVisible\r\n     }))\r\n \r\n     const takePicture = async () => {\r\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.takePictureAsync(options);\r\n             console.log(data.uri)\r\n-            setImage(data.uri)\r\n+            props.setImageLink(data.uri)\r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645367801645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.takePictureAsync(options);\r\n             console.log(data.uri)\r\n             props.setImageLink(data.uri)\r\n+            setVisible(false)\r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645367918698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,13 @@\n                         buttonNegative: 'Cancel',\r\n                     }} />\r\n                 <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                     <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-                        <Icon name=\"circle\" size={50} />\r\n+                        <Icon name=\"circle\" size={50} color={\"red\"}/>\r\n                     </TouchableOpacity>\r\n                 </View>\r\n                 <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n-                    <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} />\r\n+                    <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} color={\"red\"} />\r\n                 </View>\r\n             </Modal>\r\n \r\n \r\n"
                },
                {
                    "date": 1645367947592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                     <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n                         <Icon name=\"circle\" size={50} color={\"red\"}/>\r\n                     </TouchableOpacity>\r\n                 </View>\r\n-                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 }}>\r\n+                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 ,right: 0}}>\r\n                     <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} color={\"red\"} />\r\n                 </View>\r\n             </Modal>\r\n \r\n"
                },
                {
                    "date": 1645368261769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n             const data = await camera.takePictureAsync(options);\r\n             console.log(data.uri)\r\n             props.setImageLink(data.uri)\r\n             setVisible(false)\r\n+            props.haha()\r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645368292161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.takePictureAsync(options);\r\n             console.log(data.uri)\r\n-            props.setImageLink(data.uri)\r\n-            setVisible(false)\r\n+            // props.setImageLink(data.uri)\r\n+            // setVisible(false)\r\n             props.haha()\r\n         }\r\n     }\r\n     return (\r\n"
                },
                {
                    "date": 1645368325622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Icon from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n-const ModalComponent = (props, ref) => {\r\n+const ModalComponent = ({props}, ref) => {\r\n     const camera = useRef(null)\r\n     \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const [visible, setVisible] = useState(false)\r\n"
                },
                {
                    "date": 1645368822311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import Icon from \"react-native-vector-icons/MaterialIcons\"\r\n import { RNCamera } from 'react-native-camera'\r\n \r\n \r\n-const ModalComponent = ({props}, ref) => {\r\n+const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n     \r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const [visible, setVisible] = useState(false)\r\n"
                },
                {
                    "date": 1645368910815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \r\n     const takePicture = async () => {\r\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n-            const data = await camera.takePictureAsync(options);\r\n+            const data = await camera.current.takePictureAsync(options);\r\n             console.log(data.uri)\r\n             // props.setImageLink(data.uri)\r\n             // setVisible(false)\r\n             props.haha()\r\n"
                },
                {
                    "date": 1645368946535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,11 @@\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.current.takePictureAsync(options);\r\n             console.log(data.uri)\r\n-            // props.setImageLink(data.uri)\r\n-            // setVisible(false)\r\n-            props.haha()\r\n+            props.setImageLink(data.uri)\r\n+            setVisible(false)\r\n+            \r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645369000866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n         if (camera) {\r\n             const options = { quality: 0.5, base64: true };\r\n             const data = await camera.current.takePictureAsync(options);\r\n             console.log(data.uri)\r\n-            props.setImageLink(data.uri)\r\n+            props.imageLink(data.uri)\r\n             setVisible(false)\r\n             \r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1645369321213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n             const data = await camera.current.takePictureAsync(options);\r\n             console.log(data.uri)\r\n             props.imageLink(data.uri)\r\n             setVisible(false)\r\n-            \r\n         }\r\n     }\r\n     return (\r\n         <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n"
                },
                {
                    "date": 1645369328738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,18 @@\n \r\n \r\n const ModalComponent = (props, ref) => {\r\n     const camera = useRef(null)\r\n-    \r\n+\r\n     const [cameraDirection, setCameraDirection] = useState(RNCamera.Constants.Type.back)\r\n     const [visible, setVisible] = useState(false)\r\n     const changeDirection = () => {\r\n         if (cameraDirection == RNCamera.Constants.Type.back)\r\n             setCameraDirection(RNCamera.Constants.Type.front)\r\n         else setCameraDirection(RNCamera.Constants.Type.back)\r\n     }\r\n-    const onVisible=()=>{\r\n-       setVisible(true)\r\n+    const onVisible = () => {\r\n+        setVisible(true)\r\n     }\r\n     useImperativeHandle(ref, () => ({\r\n         onVisible: onVisible\r\n     }))\r\n@@ -50,12 +50,12 @@\n                         buttonNegative: 'Cancel',\r\n                     }} />\r\n                 <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\r\n                     <TouchableOpacity onPress={takePicture} style={styles.capture}>\r\n-                        <Icon name=\"circle\" size={50} color={\"red\"}/>\r\n+                        <Icon name=\"circle\" size={50} color={\"red\"} />\r\n                     </TouchableOpacity>\r\n                 </View>\r\n-                <View style={{ position: \"absolute\", alignItems: 'center', top: 20 ,right: 0}}>\r\n+                <View style={{ position: \"absolute\", alignItems: 'center', top: 20, right: 0 }}>\r\n                     <Icon name=\"flip-camera-android\" size={50} onPress={changeDirection} color={\"red\"} />\r\n                 </View>\r\n             </Modal>\r\n \r\n"
                }
            ],
            "date": 1645350836501,
            "name": "Commit-0",
            "content": "import React from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\nconst ModalComponent =()=>{\r\n    return(\r\n        <View style={{ backgroundColor: \"white\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n        </View>\r\n    )\r\n}\r\nexport default ModalComponent"
        }
    ]
}